# https://github.com/bartmichu/ubuntu-zabbix-userparams
#
# Ubuntu system monitoring.
#
# Usage:
# - Copy userparams file (ubuntu-userparams.conf) to a directory included in your Zabbix Agent configuration file, e.g. /etc/zabbix/zabbix_agentd.d/ or /etc/zabbix/zabbix_agent2.d/
# - Set userparams file owner and group (chown root:zabbix ubuntu-userparams.conf)
# - Set userparams file mode (chmod 0440 ubuntu-userparams.conf)
# - Copy corresponding sudoers file (ubuntu-userparams) to /etc/sudoers.d/ directory
# - Set sudoers file mode (chmod 0440 /etc/sudoers.d/ubuntu-userparams)
# - Restart Zabbix Agent (systemctl restart zabbix-agent.service or systemctl restart zabbix-agent2.service)
# - Import corresponding template file (ubuntu-userparams-template.yaml) on Zabbix Server
# - Link 'Template ubuntu-userparams by Zabbix agent active' template to selected hosts
# - You may need to increase the Timeout value in your Zabbix Agent configuration file, e.g. Timeout=30
#
# System requirements:
# - update-notifier-common package installed for 'reboot.*' and 'updates.*' keys
# - needrestart and libpam-systemd packages installed for 'needrestart.*' keys
# - distro-info package installed for 'support.*' keys
# - sudo installed for some of 'needrestart' keys
#
# Tested on:
# - Zabbix Agent/Zabbix Agent 2 on Ubuntu 20.04 and Ubuntu 22.04
# - Zabbix Server 5.x
#


# Return version number of this file.
# Reserved for future use (versioning) within the template.
UserParameter=ubuntu-userparams.userparams-version,echo 5


# Check if the reboot-required file was created by a previous update or install of a core library or service.
# This flag indicates that a system reboot is needed.
#
# Expected return value:
#  1 - reboot is required
#  2 - reboot is not required
UserParameter=ubuntu-userparams.reboot.required,/usr/bin/stat /var/run/reboot-required 2>/dev/null 1>/dev/null && /usr/bin/echo 1 || /usr/bin/echo 2


# Get the number of all applicable updates, including security updates.
#
# Expected return value: number indicating the number of updates.
UserParameter=ubuntu-userparams.updates.all,/usr/lib/update-notifier/apt-check 2>&1 | /usr/bin/cut -d ';' -f 1


# Check the number of pending security updates.
#
# Expected return value: number indicating the number of security updates.
UserParameter=ubuntu-userparams.updates.security,/usr/lib/update-notifier/apt-check 2>&1 | /usr/bin/cut -d ';' -f 2


# Check for obsolete kernel. Requires sudo.
#
# Expected return value:
#  0 - unknown or failed to detect
#  1 - no pending upgrade
#  2 - ABI compatible upgrade pending
#  3 - version upgrade pending
UserParameter=ubuntu-userparams.needrestart.kernel,/usr/bin/sudo /usr/sbin/needrestart -b -r l -k | /usr/bin/grep -i 'needrestart-ksta' | /usr/bin/cut -d ':' -f2 | /usr/bin/xargs


# Get the number of services which are using meanwhile deleted files (e.g. shared libraries).
# These services may need to be restarted after an update. Requires sudo.
#
# Expected return value: number indicating the number of services.
UserParameter=ubuntu-userparams.needrestart.libs,/usr/bin/sudo /usr/sbin/needrestart -b -r l -l | /usr/bin/grep -i 'needrestart-svc' | /usr/bin/wc -l


# Get the number of processes which are using meanwhile deleted files.
# These processes may need to be restarted after an update. Requires sudo.
#
# Expected return value: number indicating the number of processes.
UserParameter=ubuntu-userparams.needrestart.pids,/usr/bin/sudo /usr/sbin/needrestart -b -r l -l | /usr/bin/grep -i 'needrestart-pid' | /usr/bin/wc -l


# Get the number of days until installed release reaches End Of Life milestone.
#
# Expected return value: number indicating the number of days.
UserParameter=ubuntu-userparams.support.eol,/usr/bin/ubuntu-distro-info -yeol --series `/usr/bin/lsb_release -c -s`


# Check support status for currently installed release.
#
# Expected return value:
#  0 - unsupported
#  1 - supported
UserParameter=ubuntu-userparams.support.status,/usr/bin/ubuntu-distro-info --supported | /usr/bin/grep -i -c `/usr/bin/lsb_release -c -s`


# Get the number of installed packages that are not marked as 'ok' in the dpkg database.
# These packages are broken and require manual intervention (i.e. re-installation).
#
# Expected return value: number indicating the number of packages.
UserParameter=ubuntu-userparams.packages.broken,/usr/bin/dpkg-query -W -f '${db:Status-Eflag} ${db:Status-Status} ${binary:Package}\n' | /usr/bin/cut -d ' ' -f 1 | /usr/bin/grep -i -v 'ok' | /usr/bin/wc -l


# Get the number of installed packages that are in potentially problematic state (i.e. different than 'installed' and 'config-files').
# These packages may require further configuration or installation steps.
#
# Expected return value: number indicating the number of packages.
UserParameter=ubuntu-userparams.packages.problematic,/usr/bin/dpkg-query -W -f '${db:Status-Status} ${binary:Package}\n' | /usr/bin/cut -d ' ' -f 1 | /usr/bin/grep -i -v -e 'installed' -e 'config-files' | /usr/bin/wc -l


# Check if system was shut down gracefully before current boot.
#
# Expected return value:
#  1 - ungraceful shutdown
#  2 - graceful shutdown
UserParameter=ubuntu-userparams.graceful-shutdown,/usr/bin/last -Fxn2 shutdown reboot | /usr/bin/cut -d ' ' -f 1 | /usr/bin/grep -c -i 'shutdown' 2>/dev/null 1>/dev/null && /usr/bin/echo 2 || /usr/bin/echo 1
