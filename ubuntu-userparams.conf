# https://github.com/bartmichu/ubuntu-zabbix-userparams
#
# Ubuntu system monitoring.
#
# Usage:
# - Copy the userparams file (ubuntu-userparams.conf) to a directory included in your Zabbix Agent configuration file, such as /etc/zabbix/zabbix_agentd.d/ or /etc/zabbix/zabbix_agent2.d/.
# - Set the owner and group of the userparams file (chown root:zabbix ubuntu-userparams.conf).
# - Set the mode of the userparams file (chmod 0440 ubuntu-userparams.conf).
# - Copy the corresponding sudoers file (ubuntu-userparams) to the /etc/sudoers.d/ directory.
# - Set the mode of the sudoers file (chmod 0440 /etc/sudoers.d/ubuntu-userparams).
# - Restart the Zabbix Agent (systemctl restart zabbix-agent.service or systemctl restart zabbix-agent2.service).
# - Import the corresponding template file (ubuntu-userparams-template.yaml) on the Zabbix Server.
# - Link the 'Template ubuntu-userparams by Zabbix agent active' template to the selected hosts.
# - You may need to increase the Timeout value in your Zabbix Agent configuration file, for example, Timeout=30.
#
# System requirements:
# - The 'update-notifier-common' package needs to be installed for the 'reboot.' and 'updates.' keys.
# - The 'needrestart' and 'libpam-systemd' packages need to be installed for the 'needrestart.*' keys.
# - The 'distro-info' package needs to be installed for the 'support.*' keys.
# - 'sudo' needs to be installed for some of the 'needrestart' keys.
#
# Tested on:
# - Zabbix Agent 2 on Ubuntu 20.04 and Ubuntu 22.04
# - Zabbix Server 6.0 LTS
#


# Return the version number of this file.
# This field is reserved for future use and intended for versioning within the template.
UserParameter=ubuntu-userparams.userparams-version,echo 6


# Check if the reboot-required file was created by a previous update or installation of a core library or service.
# This flag indicates that a system reboot is needed.
#
# Expected return value:
# - 1: reboot is required
# - 2: reboot is not required
UserParameter=ubuntu-userparams.reboot.required,/usr/bin/stat /var/run/reboot-required 2>/dev/null 1>/dev/null && /usr/bin/echo 1 || /usr/bin/echo 2


# Get the number of all applicable updates, including security updates.
#
# Expected return value: number indicating the number of updates.
UserParameter=ubuntu-userparams.updates.all,/usr/lib/update-notifier/apt-check 2>&1 | /usr/bin/cut -d ';' -f 1


# Get the number of pending security updates.
#
# Expected return value: number indicating the number of security updates.
UserParameter=ubuntu-userparams.updates.security,/usr/lib/update-notifier/apt-check 2>&1 | /usr/bin/cut -d ';' -f 2


# Check for obsolete kernel. Requires sudo.
#
# Expected return value:
# - 0: unknown or failed to detect
# - 1: no pending upgrade
# - 2: ABI compatible upgrade pending
# - 3: version upgrade pending
UserParameter=ubuntu-userparams.needrestart.kernel,/usr/bin/sudo /usr/sbin/needrestart -b -r l -k | /usr/bin/grep -i 'needrestart-ksta' | /usr/bin/cut -d ':' -f2 | /usr/bin/xargs


# Get the number of services that are currently using deleted files (e.g., shared libraries).
# These services may need to be restarted after an update. Requires sudo.
#
# Expected return value: number indicating the number of services.
UserParameter=ubuntu-userparams.needrestart.libs,/usr/bin/sudo /usr/sbin/needrestart -b -r l -l | /usr/bin/grep -i 'needrestart-svc' | /usr/bin/wc -l


# Get the number of processes that are currently using deleted files (e.g., shared libraries).
# These processes may need to be restarted after an update. Requires sudo.
#
# Expected return value: number indicating the number of processes.
UserParameter=ubuntu-userparams.needrestart.pids,/usr/bin/sudo /usr/sbin/needrestart -b -r l -l | /usr/bin/grep -i 'needrestart-pid' | /usr/bin/wc -l


# Calculate the number of days remaining until the installed release reaches its End Of Life milestone.
#
# Expected return value: number indicating the number of days.
UserParameter=ubuntu-userparams.support.eol,/usr/bin/ubuntu-distro-info -yeol --series `/usr/bin/lsb_release -c -s`


# Check the support status of the currently installed release.
#
# Expected return value:
# - 0: unsupported
# - 1: supported
UserParameter=ubuntu-userparams.support.status,/usr/bin/ubuntu-distro-info --supported | /usr/bin/grep -i -c `/usr/bin/lsb_release -c -s`


# Get the count of installed packages that are not marked as 'ok' in the dpkg database.
# These packages are broken and need manual intervention, such as re-installation.
#
# Expected return value: number indicating the number of packages.
UserParameter=ubuntu-userparams.packages.broken,/usr/bin/dpkg-query -W -f '${db:Status-Eflag} ${db:Status-Status} ${binary:Package}\n' | /usr/bin/cut -d ' ' -f 1 | /usr/bin/grep -i -v 'ok' | /usr/bin/wc -l


# Get the count of installed packages that are in a potentially problematic state (i.e., not 'installed' or 'config-files').
# These packages may require additional configuration or installation steps.
#
# Expected return value: number indicating the number of packages.
UserParameter=ubuntu-userparams.packages.problematic,/usr/bin/dpkg-query -W -f '${db:Status-Status} ${binary:Package}\n' | /usr/bin/cut -d ' ' -f 1 | /usr/bin/grep -i -v -e 'installed' -e 'config-files' | /usr/bin/wc -l


# Check if the system was shut down gracefully prior to the current boot.
#
# Expected return value:
#  1 - ungraceful shutdown
#  2 - graceful shutdown
UserParameter=ubuntu-userparams.graceful-shutdown,/usr/bin/last -Fxn2 shutdown reboot | /usr/bin/cut -d ' ' -f 1 | /usr/bin/grep -c -i 'shutdown' 2>/dev/null 1>/dev/null && /usr/bin/echo 2 || /usr/bin/echo 1
